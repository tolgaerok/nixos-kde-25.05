# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot = {
    loader.grub.configurationLimit = 6;
    supportedFilesystems = [ "ntfs" ];
    extraModprobeConfig = ''
      blacklist iTCO_wdt
    '';
    initrd = {
      availableKernelModules =
        [ "xhci_pci" "ahci" "nvme" "usbhid" "uas" "sd_mod" ];
      kernelModules = [ ];
    };

    kernelModules = [
      "kvm-intel"

    ]; # "nvidia" "nvidia_drm" "nvidia_modeset" "nvidia_uvm"

    extraModulePackages = [ ];

    kernel.sysctl = {
      # CPU Scheduler Performance Optimization
      #"kernel.sched_child_runs_first" = 0;
      "kernel.sched_cfs_bandwidth_slice_us" = 3000;
      "usbcore.autosuspend" = "-1";
    };

    kernelParams = [
      "nowatchdog"
      "audit=0"
      "cryptomgr.notests"
      "fbcon=nodefer"
      "intel_iommu=on"
      "io_delay=none"
      "iomem=relaxed"
      "iommu=pt"
      "loglevel=3"
      "mitigations=off"
      "no_timer_check"
      "quiet"
      "rd.udev.log_level=3"
      "rootdelay=0"
      "splash"
      "split_lock_detect=off"
      "systemd.show_status=auto"
      "transparent_hugepage=never"
      "udev.log_level=3"
      # "logo.nologo"
      # "nomce"
      # "nvidia_drm.modeset=1"
      # "rd.driver.blacklist=nouveau"
      # "rd.systemd.show_status=auto"
      # "tsc=nowatchdog"
      # "wayland"
      #"nosoftlockup"
      #"nvidia.modeset=1"
      #"nvidia_drm.fbdev=1"
      #"rcupdate.rcu_expedited=1"
      #"skew_tick=1"
      #"video.allow_duplicates=1"
      #"zswap.compressor=lz4"
      #"zswap.enabled=1"
      #"zswap.max_pool_percent=10"
      #"zswap.zpool=zsmalloc"
    ];

  };

  # ----------------------------------------------- #
  # For defrag
  # ----------------------------------------------- #
  # defrag sudo e4defrag -v /
  # sudo e4defrag -v /home/tolga

  # findmnt /
  # sudo tune2fs -m 1 /dev/nvme0n1p2
  # sudo tune2fs -l /dev/nvme0n1p2 | grep 'Reserved block count'
  # sudo tune2fs -l /dev/nvme0n1p2 | grep 'Block count'

  # ----------------------------------------------- #
  # For smb related connection
  # ----------------------------------------------- #
  # systemd.tmpfiles.rules = [ "d /mnt/Router 0755 tolga tolga -" ];
  # system.activationScripts.createRouterDir.text = ''
  #  mkdir -p /mnt/Router
  #'';

  # ----------------------------------------------- #
  # Incase filesytem hangs, kill in 1s
  # ----------------------------------------------- #
  systemd.extraConfig = "DefaultTimeoutStopSec=1s";

  # ----------------------------------------------- ## ----------------------------------------------- ## ----------------------------------------------- #
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c455b58d-af08-4370-8ff8-74f086b24688";
    fsType = "ext4";
    options = [
      "commit=10"
      "data=ordered"
      "data=writeback"
      "discard"
      "noatime"
      # "nodiratime"
      # "relatime"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/D613-8B1C";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"

    ];
  };

  # ----------------------------------------------- #
  # Mount my TEMU_USB case and ramp up to max speed
  # ----------------------------------------------- #
  services.udisks2.enable = true;

  fileSystems."/mnt/TEMU_STICK" = {
    device = "/dev/disk/by-uuid/0D2C6AA663A456A9"; # lsblk -f    blkid /dev/sdc1    dd if=/dev/zero of=/mnt/TEMU_STICK/testfile bs=1M count=500 status=progress
    fsType = "ntfs3";
    options = [
      "rw"
      "async"
      "uid=1000"
      "gid=1000"
      "umask=0022"

    ];
  };

  # ----------------------------------------------- #
  # QNAP Server
  # ----------------------------------------------- #
  fileSystems."/mnt/Public" = {
    device = "//192.168.0.17/Public";
    fsType = "cifs";
    options = let
      uid = "1000";
      gid = "1000";
      credentials = "/etc/nixos/samba/mnt/smb-secrets";
    in [
      "cache=loose"
      "credentials=${credentials}"
      "gid=${gid}"
      "iocharset=utf8"
      "noauto"
      "rw"
      "soft"
      "uid=${uid}"
      "vers=2.1"
      "x-systemd.automount"
      "x-systemd.device-timeout=5s"
      "x-systemd.idle-timeout=5"
      "x-systemd.mount-timeout=5s"
      "x-systemd.requires=network-online.target"
    ];
  };

  fileSystems."/mnt/Relationships" = {
    device = "//192.168.0.17/RELATIONSHIPS";
    fsType = "cifs";
    options = [
      "cache=loose"
      "credentials=/etc/nixos/samba/mnt/smb-secrets"
      "gid=1000"
      "iocharset=utf8"
      "noauto"
      "rw"
      "soft"
      "uid=1000"
      "vers=2.1"
      "x-systemd.automount"
      "x-systemd.device-timeout=5s"
      "x-systemd.idle-timeout=5"
      "x-systemd.mount-timeout=5s"
      "x-systemd.requires=network-online.target"
    ];
  };

  swapDevices = [ ];

  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20f0u5.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";

  hardware = {
    cpu.intel.updateMicrocode =
      lib.mkDefault config.hardware.enableRedistributableFirmware;
    bluetooth.enable = true;
    bluetooth.powerOnBoot = true;
    enableRedistributableFirmware = true;
    keyboard.qmk.enable = true;

  };
  local.hardware-clock.enable = false;
}
