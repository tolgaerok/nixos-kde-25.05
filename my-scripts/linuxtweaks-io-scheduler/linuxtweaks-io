#!/bin/bash

# Dependencies check
command -v yad >/dev/null 2>&1 || { echo >&2 "YAD is required but it's not installed. Aborting."; exit 1; }

SERVICE_NAME="io-scheduler.service"
SERVICE_PATH="/etc/systemd/system/$SERVICE_NAME"
BLOCK_DEVICE=$(lsblk -ndo NAME,TYPE | grep -E 'disk$' | head -n 1 | awk '{print $1}')
DEVICE_PATH="/sys/block/$BLOCK_DEVICE/queue/scheduler"
DEVICE_TYPE=$(cat /sys/block/$BLOCK_DEVICE/queue/rotational)

# Detect scheduler recommendation
if [[ "$BLOCK_DEVICE" == nvme* ]]; then
  SCHEDULER="none"
elif [[ "$DEVICE_TYPE" == "0" ]]; then
  SCHEDULER="mq-deadline" # SSD
else
  SCHEDULER="mq-deadline" # HDD
fi

# Info box
show_info() {
  yad --info --width=500 --title="I/O Scheduler Service Info" --text="
<b>What this does:</b>\n
This script creates a systemd service to set the I/O scheduler to <b>$SCHEDULER</b> on boot for your detected primary device: <b>/dev/$BLOCK_DEVICE</b>\n
Recommended for: <b>$( [[ "$BLOCK_DEVICE" == nvme* ]] && echo "NVMe" || ([[ "$DEVICE_TYPE" == "0" ]] && echo "SSD" || echo "HDD"))</b>\n\n
Schedulers:\n
 - none: Best for NVMe (no scheduling overhead)\n
 - mq-deadline: Balanced, fair for SSD/HDD\n
 - bfq / kyber: Optional, more latency control\n
"
}

# Create systemd service
install_service() {
  pkexec bash -c "
echo '[Unit]
Description=Set I/O Scheduler on boot

[Service]
Type=oneshot
ExecStart=/bin/bash -c \"echo $SCHEDULER | tee $DEVICE_PATH; echo I/O Scheduler set to: \$(cat $DEVICE_PATH)\"

[Install]
WantedBy=default.target' > $SERVICE_PATH
"

  pkexec systemctl daemon-reexec
  pkexec systemctl enable "$SERVICE_NAME"
  pkexec systemctl start "$SERVICE_NAME"

  yad --info --text="✅ Service installed and started.\nDevice: /dev/$BLOCK_DEVICE\nScheduler: $SCHEDULER"
}

# Uninstall
uninstall_service() {
  pkexec systemctl stop "$SERVICE_NAME"
  pkexec systemctl disable "$SERVICE_NAME"
  pkexec rm -f "$SERVICE_PATH"
  pkexec systemctl daemon-reexec

  yad --info --text="🗑️ Service uninstalled."
}

# Show status
show_status() {
  STATUS=$(systemctl is-active "$SERVICE_NAME" 2>/dev/null || echo "not installed")
  ENABLED=$(systemctl is-enabled "$SERVICE_NAME" 2>/dev/null || echo "not enabled")

  CURRENT_SCHEDULER=$(cat "$DEVICE_PATH" | tr '[]' '*')

  yad --info --text="📊 <b>Service status:</b>\nActive: $STATUS\nEnabled: $ENABLED\n\n<b>Device:</b> /dev/$BLOCK_DEVICE\nScheduler: $CURRENT_SCHEDULER"
}

# Menu loop
while true; do
  ACTION=$(yad --width=400 --height=300 --center --title="I/O Scheduler Menu" \
    --text="Select an action for your device: <b>/dev/$BLOCK_DEVICE</b>\nRecommended scheduler: <b>$SCHEDULER</b>" \
    --button="Install/Enable Service:0" \
    --button="Start Service:1" \
    --button="Restart Service:2" \
    --button="Status:3" \
    --button="Uninstall:4" \
    --button="About:5" \
    --button="Exit:6")

  case $? in
    0) install_service ;;
    1) pkexec systemctl start "$SERVICE_NAME" ;;
    2) pkexec systemctl restart "$SERVICE_NAME" ;;
    3) show_status ;;
    4) uninstall_service ;;
    5) show_info ;;
    6) break ;;
  esac
done
